apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "price.realtime.fullname" . }}
  labels:
    {{- include "price.realtime.labels" . | nindent 4 }}
    kube-monkey/enabled: enabled
    kube-monkey/identifier: priceRealtime
    kube-monkey/kill-mode: fixed
    kube-monkey/kill-value: "1"
    kube-monkey/mtbf: "8"
spec:
  selector:
    matchLabels:
      {{- include "price.realtime.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/realtime-config-secret.yaml") . | sha256sum }}
      {{- with .Values.realtime.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "price.realtime.selectorLabels" . | nindent 8 }}
        kube-monkey/enabled: enabled
        kube-monkey/identifier: price
    spec:
      containers:
        - name: realtime
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ $.Values.realtime.image.repository }}@{{ $.Values.realtime.image.digest }}"
          ports:
            - name: grpc
              containerPort: {{ .Values.realtime.service.grpc }}
              protocol: TCP
            - name: prometheus
              containerPort: {{ .Values.realtime.service.prometheus }}
              protocol: TCP
          env:
          - name: IBEX_URL
            value: {{ .Values.ibex.url | quote }}
          - name: IBEX_EMAIL
            valueFrom:
              secretKeyRef:
                name: {{ .Values.ibex.secrets.name | quote }}
                key: {{ .Values.ibex.secrets.email.key | quote }}
          - name: IBEX_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.ibex.secrets.name | quote }}
                key: {{ .Values.ibex.secrets.password.key | quote }}
          - name: REDIS_MASTER_NAME
            value: {{ .Values.redis.sentinel.masterSet | quote }}
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.redis.auth.existingSecret | quote }}
                key: {{ .Values.redis.auth.existingSecretPasswordKey | quote }}
          {{ range until (.Values.redis.replica.replicaCount | int) }}
          - name: {{ printf "REDIS_%d_DNS" . }}
            value: {{ printf "flash-redis-node-%d.flash-redis-headless" . | quote }}
          {{ end }}
          volumeMounts:
            - name: custom-yaml
              mountPath: "/var/yaml/"
          livenessProbe:
            grpc:
              port: 50051
              service: ""
            initialDelaySeconds: 45
            timeoutSeconds: 2
          readinessProbe:
            grpc:
              port: 50051
              service: ""
            timeoutSeconds: 2
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.realtime.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.realtime.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.realtime.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: custom-yaml
          secret:
            secretName: {{ include "price.realtime.fullname" . }}-config
